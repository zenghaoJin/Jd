<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="mapper.JdProdsMapper" >
  <resultMap id="BaseResultMap" type="po.JdProds" >
    <id column="pro_id" property="proId" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="brand" property="brand" jdbcType="VARCHAR" />
    <result column="pro_message" property="proMessage" jdbcType="VARCHAR" />
    <result column="price" property="price" jdbcType="VARCHAR" />
    <result column="discount" property="discount" jdbcType="VARCHAR" />
    <result column="sto_id" property="stoId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    pro_id, name, brand, pro_message, price, discount, sto_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="po.JdProdsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from jd_prods
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from jd_prods
    where pro_id = #{proId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from jd_prods
    where pro_id = #{proId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="po.JdProdsExample" >
    delete from jd_prods
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="po.JdProds" useGeneratedKeys="true" keyProperty="proId">
    insert into jd_prods (pro_id, name, brand, 
      pro_message, price, discount, 
      sto_id)
    values (#{proId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{brand,jdbcType=VARCHAR}, 
      #{proMessage,jdbcType=VARCHAR}, #{price,jdbcType=VARCHAR}, #{discount,jdbcType=VARCHAR}, 
      #{stoId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="po.JdProds" >
    insert into jd_prods
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="proId != null" >
        pro_id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="brand != null" >
        brand,
      </if>
      <if test="proMessage != null" >
        pro_message,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="discount != null" >
        discount,
      </if>
      <if test="stoId != null" >
        sto_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="proId != null" >
        #{proId,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="brand != null" >
        #{brand,jdbcType=VARCHAR},
      </if>
      <if test="proMessage != null" >
        #{proMessage,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        #{price,jdbcType=VARCHAR},
      </if>
      <if test="discount != null" >
        #{discount,jdbcType=VARCHAR},
      </if>
      <if test="stoId != null" >
        #{stoId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="po.JdProdsExample" resultType="java.lang.Integer" >
    select count(*) from jd_prods
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update jd_prods
    <set >
      <if test="record.proId != null" >
        pro_id = #{record.proId,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.brand != null" >
        brand = #{record.brand,jdbcType=VARCHAR},
      </if>
      <if test="record.proMessage != null" >
        pro_message = #{record.proMessage,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null" >
        price = #{record.price,jdbcType=VARCHAR},
      </if>
      <if test="record.discount != null" >
        discount = #{record.discount,jdbcType=VARCHAR},
      </if>
      <if test="record.stoId != null" >
        sto_id = #{record.stoId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update jd_prods
    set pro_id = #{record.proId,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      brand = #{record.brand,jdbcType=VARCHAR},
      pro_message = #{record.proMessage,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=VARCHAR},
      discount = #{record.discount,jdbcType=VARCHAR},
      sto_id = #{record.stoId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="po.JdProds" >
    update jd_prods
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="brand != null" >
        brand = #{brand,jdbcType=VARCHAR},
      </if>
      <if test="proMessage != null" >
        pro_message = #{proMessage,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=VARCHAR},
      </if>
      <if test="discount != null" >
        discount = #{discount,jdbcType=VARCHAR},
      </if>
      <if test="stoId != null" >
        sto_id = #{stoId,jdbcType=INTEGER},
      </if>
    </set>
    where pro_id = #{proId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="po.JdProds" >
    update jd_prods
    set name = #{name,jdbcType=VARCHAR},
      brand = #{brand,jdbcType=VARCHAR},
      pro_message = #{proMessage,jdbcType=VARCHAR},
      price = #{price,jdbcType=VARCHAR},
      discount = #{discount,jdbcType=VARCHAR},
      sto_id = #{stoId,jdbcType=INTEGER}
    where pro_id = #{proId,jdbcType=INTEGER}
  </update>
</mapper>