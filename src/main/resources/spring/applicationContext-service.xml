<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.2.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context.xsd">
	<!-- 商品管理的service -->
	<context:component-scan base-package="service"/>
	<!-- 加载db.properties文件中的内容，db.properties文件中key命名要有一定的特殊规则 -->
	<context:property-placeholder location="classpath:db.properties" />
	<!-- redis数据源 -->
	<bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxIdle" value="${redis.maxIdle}" />
		<!--最大空闲数,数据库连接的最大空闲时间。
		超过空闲时间，数据库连接将被标记为不可用，然后被释放。设为0表示无限制。-->
		<property name="maxTotal" value="${redis.maxActive}" />
		<!--redis库的连接数量最大-->
		<property name="maxWaitMillis" value="${redis.maxWait}"/>
		<!--最大建立连接等待时间。如果超过此时间将接到异常。设为-1表示无限制。-->
		<property name="testOnBorrow" value="${redis.testOnBorrow}"/>
		<!--在borrow一个jedis实例时，是否提前进行alidate操作；如果为true，则得到的jedis实例均是可用的-->
	</bean>

	<!-- redis连接池 -->
	<bean id="jedisPool" class="redis.clients.jedis.JedisPool"
		  destroy-method="destroy"  depends-on="poolConfig">
		<constructor-arg name="poolConfig" ref="poolConfig" /> <!-- 加载jedisPool配置信息 -->
		<constructor-arg name="host" value="${redis.host}" /><!-- redis主机地址 -->
		<constructor-arg name="port" value="${redis.port}"/><!-- redis连接端口 -->
		<constructor-arg name="password" value="${redis.pass}"/><!-- 密码-->
		<constructor-arg name="timeout" value="${redis.timeout}"/><!--设置redis将会关闭超时超过2000秒的空闲连接-->
		<!--<constructor-arg name="database" value="${redis.database}"/>多少个redis数据库-->
	</bean>
</beans>
