<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.2.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd ">
	<!--加载配置文件-->
	<context:property-placeholder location="classpath:resource.properties"></context:property-placeholder>
	<!-- 可以扫描controller、service、...
	这里让扫描controller，指定controller的包
	 -->
	<context:component-scan base-package="controller"></context:component-scan>
	
	<!-- 静态资源解析
	包括 ：js、css、img、..
	 -->
	 <!--<mvc:resources location="${pageContext.request.contextPath}/js/" mapping="/js/**"/>-->
	 <!--<mvc:resources location="${pageContext.request.contextPath}/img/" mapping="/img/**"/>-->
	 <!--<mvc:resources location="${pageContext.request.contextPath}/css/" mapping="/css/**"/>-->
	
	<!-- 使用 mvc:annotation-driven代替上边注解映射器和注解适配器配置
	mvc:annotation-driven默认加载很多的参数绑定方法，
	比如json转换解析器就默认加载了，如果使用mvc:annotation-driven不用配置上边的RequestMappingHandlerMapping和RequestMappingHandlerAdapter
	实际开发时使用mvc:annotation-driven
	 -->
	<mvc:annotation-driven validator="validator"></mvc:annotation-driven>

	<!--用于处理web项目的静态文件，为了加载静态文件-->
	<mvc:default-servlet-handler></mvc:default-servlet-handler>


	<!--&lt;!&ndash;拦截器&ndash;&gt;-->
	<!--<mvc:interceptors>-->
		<!--&lt;!&ndash; 多个拦截器，顺序执行 &ndash;&gt;-->
		<!--<mvc:interceptor>-->
			<!--<mvc:mapping path="/**"/>-->
			<!--<bean class="tool.LoginInterceptor"></bean>-->
		<!--</mvc:interceptor>-->
	<!--</mvc:interceptors>-->
	<!--捕抓异常处理-->
	<bean class="tool.JdExceptionResolver"></bean>
	<!-- 校验器 -->
	<bean id="validator"
		  class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
		<!-- hibernate校验器-->
		<property name="providerClass" value="org.hibernate.validator.HibernateValidator" />
	</bean>

	<!-- 视图解析器
	解析jsp解析，默认使用jstl标签，classpath下的得有jstl的包
	 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 配置jsp路径的前缀 -->
		<property name="prefix" value="/WEB-INF/jsp/"/>
		<!-- 配置jsp路径的后缀 -->
		<property name="suffix" value=".jsp"/>
	</bean>

	<!-- 文件上传 -->
	<bean id="multipartResolver"
		  class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 设置上传文件的最大尺寸为5MB -->
		<property name="maxUploadSize">
			<value>5242880</value>
		</property>
	</bean>


</beans>